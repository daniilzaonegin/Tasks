@model Tasks.Models.NewTaskViewModel

@{
    ViewBag.Title = "NewTask";
}

<h2>NewTask</h2>

@using (Html.BeginForm("NewTask", "Task", null, FormMethod.Post, htmlAttributes: new { id = "saveTaskForm" }))
{
    @Html.ValidationSummary()
    @Html.HiddenFor(x => x.NewTask.TaskId)
    @Html.HiddenFor(x => x.NewTask.FromUserId)

    <div class="form-group">
        @Html.LabelFor(x => x.NewTask.ToUserId)
        @Html.DropDownListFor(x => x.NewTask.ToUserId, Model.ToUserValues, new { @class = "form-control", required = "" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.NewTask.When)
        @Html.TextBoxFor(x => x.NewTask.When, new { @class = "form-control", required = "", id = "datepicker" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.NewTask.Subject)
        @Html.TextAreaFor(x => x.NewTask.Subject, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.NewTask.Summary)
        @Html.TextAreaFor(x => x.NewTask.Summary, new { @class = "form-control", required = "" })
    </div>
    <input class="btn btn-primary" type="submit" value="Save" />

    @Html.ActionLink("Return to task list", actionName: "TaskList", controllerName: "Home", routeValues: null, htmlAttributes: new { @class = "btn btn-default" })
}
<script>
    $("#saveTaskForm").validate({
        errorClass: "input-validation-error",
        highlight: function (element, errorClass) {
            $(element).addClass(errorClass);
        }
    });
    $("#datepicker").datepicker();
    $("#datepicker").datepicker("option", "dateFormat", "dd/mm/yy");
    $("#datepicker").datepicker("setDate", new Date());
</script>